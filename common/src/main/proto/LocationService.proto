//
// The MIT License
// Copyright Â© 2022 Project Location Service using GRPC and IP lookup
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

syntax = "proto3";
option java_multiple_files = true;
package io.github.pantomath.location.common;


message IPAddress{
  string ip=1;
}

message IPAddressExt{
  string ip=1;
  bool include_isp=2;
  bool include_domain=3;

}

message IPAddresses{
  repeated string ip=1;
}

message IPAddressesExt{
  repeated string ip=1;
  bool include_isp=2;
  bool include_domain=3;
}


message Country {
  string continent=1;
  string country = 2;
  string country_iso_code = 3;
  double latitude=4;
  double longitude=5;
  string ipaddress=6;
}

message City {
  string continent=1;
  string country = 2;
  string country_iso_code = 3;
  double latitude=4;
  double longitude=5;
  string region=6;
  string city=7;
  string zipcode=8;
  string timezone=9;
  string ipaddress=10;
}

message Domain {
  string domain=1;
}

message ISP {
  string isp=1;
  string organization=2;
}

message ASN {
  string continent=1;
  string country = 2;
  string registeredCountry = 3;
  string representedCountry = 4;
  string traits=5;
  string ipaddress=6;
}

message Location {
    City city=2;
    ISP isp=3;
    Domain domain=4;
}

message CityResponse{
  string ipaddress=1;
  City city=2;

}
message CityResponses {
  repeated CityResponse cities=1;
}
message LocationResponse{
  string ipaddress=1;
  Location location=2;

}
message LocationResponses {
  repeated LocationResponse locations=1;
}

message CountryResponse{
  string ipaddress=1;
  Country country=2;

}
message CountryResponses {
  repeated CountryResponse countries=1;
}

service Find{
  rpc location(IPAddressExt) returns (LocationResponse);
  rpc city(IPAddress) returns (CityResponse);
  rpc country(IPAddress) returns (CountryResponse);
  rpc locations(IPAddressesExt) returns (LocationResponses);
  rpc cities(IPAddresses) returns (CityResponses);
  rpc countries(IPAddresses) returns (CountryResponses);
  rpc asn(IPAddress) returns (ASN);
}